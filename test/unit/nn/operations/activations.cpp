#include <gtest/gtest.h>
#include "nn/utils/print_utils.h"
#include "toytorch.h"

using namespace toytorch;

TEST(ActivationTest, softmax) {

  Tensor a = Tensor({2, 3, 4}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                    true);

  Tensor result = softmax(a, 0);

  EXPECT_TRUE(result.strict_allclose(
      Tensor({2, 3, 4},
             {0.2689, 0.2689, 0.2689, 0.2689, 0.2689, 0.2689, 0.2689, 0.2689,
              0.2689, 0.2689, 0.2689, 0.2689, 0.7311, 0.7311, 0.7311, 0.7311,
              0.7311, 0.7311, 0.7311, 0.7311, 0.7311, 0.7311, 0.7311, 0.7311}),
      1e-6, 1e-4));

  Tensor result1 = softmax(a, 1);

  EXPECT_TRUE(result1.strict_allclose(
      Tensor({2, 3, 4},
             {0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333,
              0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333,
              0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333, 0.3333}),
      1e-6, 1e-4));

  Tensor result2 = softmax(a, 2);

  EXPECT_TRUE(result2.strict_allclose(
      Tensor({2, 3, 4},
             {0.2500, 0.2500, 0.2500, 0.2500, 0.2500, 0.2500, 0.2500, 0.2500,
              0.2500, 0.2500, 0.2500, 0.2500, 0.2500, 0.2500, 0.2500, 0.2500,
              0.2500, 0.2500, 0.2500, 0.2500, 0.2500, 0.2500, 0.2500, 0.2500}),
      1e-6, 1e-4));
}

TEST(ActivationTest, logsoftmax) {

  Tensor a = Tensor({2, 3, 4}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                    true);

  Tensor result = log_softmax(a, 0);

  // result.print();

  // result.print();
  EXPECT_TRUE(result.strict_allclose(
      Tensor({2, 3, 4}, {-1.3133, -1.3133, -1.3133, -1.3133, -1.3133, -1.3133,
                         -1.3133, -1.3133, -1.3133, -1.3133, -1.3133, -1.3133,
                         -0.3133, -0.3133, -0.3133, -0.3133, -0.3133, -0.3133,
                         -0.3133, -0.3133, -0.3133, -0.3133, -0.3133, -0.3133}),
      1e-6, 1e-4));

  Tensor result1 = log_softmax(a, 1);

  EXPECT_TRUE(result1.strict_allclose(
      Tensor({2, 3, 4}, {-1.0986, -1.0986, -1.0986, -1.0986, -1.0986, -1.0986,
                         -1.0986, -1.0986, -1.0986, -1.0986, -1.0986, -1.0986,
                         -1.0986, -1.0986, -1.0986, -1.0986, -1.0986, -1.0986,
                         -1.0986, -1.0986, -1.0986, -1.0986, -1.0986, -1.0986}),
      1e-6, 1e-4));

  Tensor result2 = log_softmax(a, 2);

  EXPECT_TRUE(result2.strict_allclose(
      Tensor({2, 3, 4}, {-1.3863, -1.3863, -1.3863, -1.3863, -1.3863, -1.3863,
                         -1.3863, -1.3863, -1.3863, -1.3863, -1.3863, -1.3863,
                         -1.3863, -1.3863, -1.3863, -1.3863, -1.3863, -1.3863,
                         -1.3863, -1.3863, -1.3863, -1.3863, -1.3863, -1.3863}),
      1e-6, 1e-4));
}